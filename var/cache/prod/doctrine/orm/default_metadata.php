<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Chefs__CLASSMETADATA__' => 0,
'App__Entity__Contact__CLASSMETADATA__' => 1,
'App__Entity__Gallery__CLASSMETADATA__' => 2,
'App__Entity__Menu__CLASSMETADATA__' => 3,
'App__Entity__Partties__CLASSMETADATA__' => 4,
'App__Entity__Specials__CLASSMETADATA__' => 5,
'App__Entity__Table__CLASSMETADATA__' => 6,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Chefs',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ChefsRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'nom' => $o[2],
                        'titre' => $o[3],
                        'image' => $o[4],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'titre' => 'titre',
                        'image' => 'image',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'titre' => 'titre',
                        'image' => 'image',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'chefs',
                    ],
                ],
                'idGenerator' => [
                    $o[5],
                ],
                'name' => [
                    'App\\Entity\\Chefs',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'nom',
                    'titre',
                    'image',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom',
                    'titre',
                    'image',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Contact',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ContactRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'nom' => $o[2],
                        'email' => $o[3],
                        'subject' => $o[4],
                        'message' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'email' => 'email',
                        'subject' => 'subject',
                        'message' => 'message',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'email' => 'email',
                        'subject' => 'subject',
                        'message' => 'message',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'contact',
                    ],
                ],
                'idGenerator' => [
                    $o[6],
                ],
                'name' => [
                    'App\\Entity\\Contact',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'text',
                ],
                'fieldName' => [
                    1 => 'id',
                    'nom',
                    'email',
                    'subject',
                    'message',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom',
                    'email',
                    'subject',
                    'message',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Gallery',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\GalleryRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'image' => $o[2],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'image' => 'image',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'image' => 'image',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'gallery',
                    ],
                ],
                'idGenerator' => [
                    $o[3],
                ],
                'name' => [
                    'App\\Entity\\Gallery',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'image',
                ],
                'columnName' => [
                    1 => 'id',
                    'image',
                ],
                'length' => [
                    2 => 255,
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Menu',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'titre' => $o[2],
                        'description' => $o[3],
                        'image' => $o[4],
                        'type' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'description' => 'description',
                        'image' => 'image',
                        'type' => 'type',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'description' => 'description',
                        'image' => 'image',
                        'type' => 'type',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'menu',
                    ],
                ],
                'idGenerator' => [
                    $o[6],
                ],
                'name' => [
                    'App\\Entity\\Menu',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'titre',
                    'description',
                    'image',
                    'type',
                ],
                'columnName' => [
                    1 => 'id',
                    'titre',
                    'description',
                    'image',
                    'type',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                    50,
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Partties',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ParttiesRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'price' => $o[2],
                        'titre' => $o[3],
                        'debut' => $o[4],
                        'ligne1' => $o[5],
                        'ligne2' => $o[6],
                        'ligne3' => $o[7],
                        'final' => $o[8],
                        'image' => $o[9],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'price' => 'price',
                        'titre' => 'titre',
                        'debut' => 'debut',
                        'ligne1' => 'ligne1',
                        'ligne2' => 'ligne2',
                        'ligne3' => 'ligne3',
                        'final' => 'final',
                        'image' => 'image',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'price' => 'price',
                        'titre' => 'titre',
                        'debut' => 'debut',
                        'ligne1' => 'ligne1',
                        'ligne2' => 'ligne2',
                        'ligne3' => 'ligne3',
                        'final' => 'final',
                        'image' => 'image',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'partties',
                    ],
                ],
                'idGenerator' => [
                    $o[10],
                ],
                'name' => [
                    'App\\Entity\\Partties',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'price',
                    'titre',
                    'debut',
                    'ligne1',
                    'ligne2',
                    'ligne3',
                    'final',
                    'image',
                ],
                'columnName' => [
                    1 => 'id',
                    'price',
                    'titre',
                    'debut',
                    'ligne1',
                    'ligne2',
                    'ligne3',
                    'final',
                    'image',
                ],
                'length' => [
                    3 => 255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Specials',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\SpecialsRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'titre' => $o[2],
                        'sousTitre' => $o[3],
                        'description' => $o[4],
                        'image' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'sous_titre' => 'sousTitre',
                        'description' => 'description',
                        'image' => 'image',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'sousTitre' => 'sous_titre',
                        'description' => 'description',
                        'image' => 'image',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'specials',
                    ],
                ],
                'idGenerator' => [
                    $o[6],
                ],
                'name' => [
                    'App\\Entity\\Specials',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'text',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'titre',
                    'sousTitre',
                    'description',
                    'image',
                ],
                'columnName' => [
                    1 => 'id',
                    'titre',
                    'sous_titre',
                    'description',
                    'image',
                ],
                'length' => [
                    2 => 255,
                    255,
                    5 => 255,
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Table',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\TableRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'email' => $o[3],
                        'tel' => $o[4],
                        'date' => $o[5],
                        'time' => $o[6],
                        'numberPeople' => $o[7],
                        'message' => $o[8],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'email' => 'email',
                        'tel' => 'tel',
                        'date' => 'date',
                        'time' => 'time',
                        'number_people' => 'numberPeople',
                        'message' => 'message',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'email' => 'email',
                        'tel' => 'tel',
                        'date' => 'date',
                        'time' => 'time',
                        'numberPeople' => 'number_people',
                        'message' => 'message',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'table',
                        'quoted' => true,
                    ],
                ],
                'idGenerator' => [
                    $o[9],
                ],
                'name' => [
                    'App\\Entity\\Table',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'integer',
                    'date',
                    'time',
                    'integer',
                    'text',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                    'email',
                    'tel',
                    'date',
                    'time',
                    'numberPeople',
                    'message',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                    'email',
                    'tel',
                    'date',
                    'time',
                    'number_people',
                    'message',
                ],
                'length' => [
                    2 => 255,
                    255,
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
